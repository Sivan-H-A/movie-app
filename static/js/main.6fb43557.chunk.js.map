{"version":3,"sources":["components/NavbarAppComponent/NavbarAppComponent.js","Hooks/usePathName.js","pages/HomePage/HomePage.js","components/HeaderActorsPage/HeaderActorsPage.js","components/ActorCard/ActorCard.js","components/Actors/Actors.js","components/SearchBox/SearchBox.js","model/ActorModel.js","pages/ActorsPage/ActorsPage.js","components/MovieCard/MovieCard.js","components/Movies/Movies.js","model/MovieModel.js","pages/MoviesPage/MoviesPage.js","pages/NotFoundPage/NotFoundPage.js","App.js","reportWebVitals.js","index.js"],"names":["NavbarAppComponent","currentPath","useLocation","pathname","Container","className","Navbar","bg","variant","Brand","href","src","alt","Nav","Link","active","includes","HomePage","useState","moviesResult","setmoviesResult","index","setIndex","additionalInfo","setAdditionalInfo","carouselMovie","useEffect","axios","get","then","res","data","results","slice","length","title","overview","map","item","id","push","Carousel","Item","poster_path","fade","activeIndex","onSelect","selectedIndex","e","Image","fluid","HeaderActorsPage","onFilterChange","onSortChange","Form","Row","Col","Label","Control","type","onChange","target","value","as","ActorCard","actor","redirectTo","setRedirectTo","undefined","to","Card","onClick","Img","img","Body","Title","imdb","rel","fname","lname","Text","deathDay","age","Actors","actorsCards","filterBy","sortBy","actors","filter","toLowerCase","sort","a","b","toUpperCase","localeCompare","SearchBox","placeHolder","searchText","onSearchChange","onResultSelected","placeholder","ListGroup","result","action","ActorModel","plainActor","birthday","this","getAge","dateString","deadString","today","Date","birthDate","getFullYear","m","getMonth","getDate","ActorsPage","filterText","setFilterText","setSortBy","setSearchText","setResults","setActors","process","concat","newActors","newSearchText","searchURL","response","name","resultIndex","some","el","parseInt","imgURL","profile_path","fullName","trim","nameArr","split","join","searchIndexURL","deathday","imdb_id","MovieCard","movie","posterPath","runtime","director","stars","plot","Movies","moviesCards","movies","MovieModel","MoviesPage","actorId","useParams","setMovies","movieList","promise1","promise2","Promise","all","responses","setStars","cast","x","setDirector","crew","find","job","setRuntime","plainMovie","Spinner","NotFoundPage","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6fb43557.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Container, Nav, Navbar} from 'react-bootstrap'\r\nimport './NavbarAppComponent.css'\r\nimport usePathName from \"../../Hooks/usePathName\"\r\n\r\nexport default function NavbarAppComponent() {\r\n    const currentPath = usePathName();\r\n    return (\r\n        <Container className=\"c-navbar\">\r\n            <Navbar bg=\"white\" variant=\"light\">\r\n                <Navbar.Brand className=\"c-navbar-brand\">\r\n                    <a href=\"#home\">\r\n                        <img src=\"https://cdn2.iconfinder.com/data/icons/bold-outline-v1/512/camera_cine_cinema_film-512.png\" alt=\"\"/>\r\n                    </a>                 \r\n                </Navbar.Brand>\r\n                <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"#home\" active={currentPath ===\"/\"|| currentPath ===\"/home\"}>Home</Nav.Link>\r\n                <Nav.Link href=\"#actors\" active={currentPath ===\"/actors\"}>Actors</Nav.Link>\r\n                <Nav.Link href=\"#movies\" active={currentPath.includes(\"movies\")}>Movies</Nav.Link>\r\n                </Nav>\r\n            </Navbar>\r\n        </Container>\r\n    )\r\n}\r\n","  \r\nimport {useLocation} from \"react-router-dom\"\r\n\r\nexport default function usePathName(){\r\n    const location = useLocation();\r\n    return location.pathname;\r\n}\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Container, Image, Carousel, Spinner } from \"react-bootstrap\";\r\nimport './HomePage.css';\r\n\r\nexport default function HomePage() {\r\n    const [moviesResult, setmoviesResult] = useState([]);\r\n    const [index, setIndex] = useState(0);\r\n    const [additionalInfo, setAdditionalInfo] = useState(\"\");\r\n    let carouselMovie=[];\r\n\r\n    const handleSelect = (selectedIndex, e) => {\r\n        setIndex(selectedIndex);\r\n        setAdditionalInfo(<div>\r\n            <h6>{moviesResult[selectedIndex].title}</h6>\r\n            <h6>Plot: {moviesResult[selectedIndex].overview}</h6></div>);\r\n    };\r\n    \r\n    useEffect(() => {\r\n        axios.get(\"https://api.themoviedb.org/3/movie/now_playing?api_key=d5fc0ebcdc97957658216ba08b5e9436\").then(res=>{\r\n            setmoviesResult(res.data.results.slice(0,19)); \r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(moviesResult && moviesResult.length>0){\r\n            setAdditionalInfo(<div>\r\n                <h6>{moviesResult[0].title}</h6>\r\n                <h6>Plot: {moviesResult[0].overview}</h6></div>)\r\n        }\r\n    }, [moviesResult]);\r\n\r\n    if(moviesResult && moviesResult.length>0){\r\n        moviesResult.map((item,id)=>{\r\n            carouselMovie.push(              \r\n                    <Carousel.Item key={id}>\r\n                        <img\r\n                        src={`https://image.tmdb.org/t/p/w500/${item.poster_path}`}\r\n                            alt={`${id} slide`}/>\r\n                    </Carousel.Item>      \r\n                \r\n            );\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Container className=\"p-home\">\r\n            <h3>Now Playing Movies</h3>\r\n            <Carousel fade  activeIndex={index} onSelect={handleSelect}>\r\n                {carouselMovie?carouselMovie\r\n                :<Image src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/33/Film_Barnstar_Hires_Gold.svg/2000px-Film_Barnstar_Hires_Gold.svg.png\" fluid />}  \r\n            </Carousel>\r\n            <h6 className=\"text-center\">{additionalInfo? additionalInfo :\"\"}</h6>\r\n\r\n        {/* <h1>Best movie app ever!</h1>\r\n                <Image src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/33/Film_Barnstar_Hires_Gold.svg/2000px-Film_Barnstar_Hires_Gold.svg.png\" fluid /> */}\r\n        </Container>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Col, Form } from 'react-bootstrap';\r\nimport './HeaderActorsPage.css';\r\n\r\nexport default function HeaderActorsPage({onFilterChange, onSortChange}) {\r\n    return (\r\n        <Form className=\"p-actor-header\">\r\n            <Form.Row>\r\n                <Col className=\"col-md-6 col-12\">               \r\n                    <Form.Label>Filter by:</Form.Label>  \r\n                    <Form.Control type=\"text\" onChange={(e)=>onFilterChange(e.target.value)}/>\r\n                </Col>\r\n                <Col className=\"col-md-6 col-12\">\r\n                    <Form.Label>Sort by:</Form.Label>\r\n                    <Form.Control as=\"select\" onChange={(e)=>onSortChange(e.target.value)}>\r\n                        <option value=\"fname\">First Name</option>\r\n                        <option value=\"lname\">Last Name</option>\r\n                        <option value=\"aged\">Age &darr;</option>\r\n                        <option value=\"agea\">Age &uarr;</option>\r\n                    </Form.Control>\r\n                </Col>\r\n            </Form.Row>                \r\n        </Form>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router';\r\nimport './ActorCard.css';\r\n\r\nexport default function ActorCard({actor}) {\r\n    const [redirectTo, setRedirectTo] = useState();\r\n\r\n    if(redirectTo!==undefined){\r\n        return <Redirect to={'/actor/'+redirectTo+'/movies'}/>\r\n    }\r\n\r\n    return (\r\n            <Card className=\"col-sm-6 col-md-3 c-actor-card\" onClick={()=>setRedirectTo(actor.id)}>\r\n                <Card.Img variant=\"top\" src={actor.img}/>\r\n                <Card.Body className=\"c-actor-card-body\">\r\n                    <Card.Title>\r\n                        <a href={actor.imdb} target=\"_blank\" rel=\"noreferrer\">\r\n                            {`${actor.fname} ${actor.lname}`}\r\n                        </a>\r\n                    </Card.Title>\r\n                    <Card.Text className={actor.deathDay?\"text-alert\":\"\"}>\r\n                        {actor.age} {actor.deathDay?\" (deceased)\":\"\"}\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ActorCard from '../ActorCard/ActorCard';\r\nimport './Actors.css'\r\nexport default function Actors({filterBy, sortBy, actors}) {\r\n    let actorsCards;\r\n\r\n    if(actors){\r\n        if(filterBy){\r\n            actors = actors.filter(actor=> actor.fname.toLowerCase().includes(filterBy.toLowerCase()) || \r\n                                            actor.lname.toLowerCase().includes(filterBy.toLowerCase()));               \r\n        }\r\n        if(sortBy){\r\n            actors.sort(function(a,b){\r\n                switch (sortBy){\r\n                    case \"fname\":\r\n                    case \"lname\":\r\n                        return a[sortBy].toUpperCase().localeCompare(b[sortBy].toUpperCase());\r\n                    case \"aged\":\r\n                        return b.age-a.age;\r\n                    case \"agea\":\r\n                        return a.age-b.age;\r\n                    default: \r\n                        return -1;\r\n                }\r\n            })\r\n        }\r\n        if(actors)\r\n            actorsCards = actors.map((actor, index) =><ActorCard key={index} actor={actor}/>);\r\n    }\r\n    return (\r\n            <div className=\"actors-cards\">\r\n                {actorsCards}\r\n            </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Form, ListGroup } from 'react-bootstrap'\r\nimport './SearchBox.css' \r\n\r\nexport default function SearchBox({placeHolder, searchText, onSearchChange, results, onResultSelected}) {\r\n    return (\r\n        <div className=\"c-search-box\">\r\n            <Form.Control className=\"c-search-input\" type=\"text\" placeholder={placeHolder} \r\n                value= {searchText}\r\n                onChange={e => onSearchChange(e.target.value)}>   \r\n            </Form.Control>               \r\n            <ListGroup className=\"c-result-box\">\r\n                {results.map((result,index) => \r\n                <ListGroup.Item action onClick= {()=>onResultSelected(index)}>\r\n                    {result}\r\n                </ListGroup.Item>)}\r\n            </ListGroup>\r\n        </div>\r\n    )\r\n}\r\n","\r\nclass ActorModel{\r\n    constructor(plainActor, lname, birthday,deathDay, img, imdb, id){\r\n        if(typeof plainActor==='object'){\r\n            this.fname = plainActor.fname;\r\n            this.lname = plainActor.lname;\r\n            this.birthday = plainActor.birthday;\r\n            this.deathDay = plainActor.deathDay;\r\n            this.img = plainActor.img;\r\n            this.imdb = plainActor.imdb;\r\n            this.id = plainActor.id;\r\n        } else{\r\n            this.fname = plainActor;\r\n            this.lname = lname;\r\n            this.birthday = birthday;\r\n            this.deathDay = deathDay;\r\n            this.img = img;\r\n            this.imdb = imdb;\r\n            this.id= id;\r\n        }\r\n        this.age = this.getAge(this.birthday, this.deathDay);\r\n    }\r\n\r\n    getAge(dateString, deadString) {\r\n        const today = deadString ?  new Date(deadString): new Date();\r\n        const birthDate = new Date(dateString);\r\n        let age = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age--;\r\n        }\r\n        return age;\r\n    }\r\n}\r\nexport default ActorModel","import React , { useState, useEffect } from 'react'\r\nimport HeaderActorsPage from '../../components/HeaderActorsPage/HeaderActorsPage'\r\nimport { Container } from 'react-bootstrap'\r\nimport Actors from '../../components/Actors/Actors';\r\nimport SearchBox from '../../components/SearchBox/SearchBox';\r\nimport './ActorsPage.css'\r\nimport axios from 'axios';\r\nimport ActorModel from '../../model/ActorModel';\r\n\r\nexport default function ActorsPage() {\r\n    const [filterText, setFilterText] = useState(\"\");\r\n    const [sortBy, setSortBy] = useState(\"fname\");\r\n    const [searchText, setSearchText] = useState(\"\")\r\n    const [results, setResults] = useState([]);\r\n    const [actors, setActors] = useState([]);\r\n\r\n    const pathPre = process.env.PUBLIC_URL;\r\n\r\n    useEffect(()=>{\r\n        axios.get(pathPre.concat(\"/actors.json\")).then(res=>{\r\n            const newActors = res.data.map(plainActor => new ActorModel(plainActor));\r\n            setActors(newActors);\r\n        });\r\n      }, []);\r\n\r\n    function filterTextChange(data){\r\n        setFilterText(data);\r\n    }\r\n\r\n    function sortByChange(data){\r\n        setSortBy(data);\r\n    }\r\n\r\n    function handleSearchChange(newSearchText){\r\n        setSearchText(newSearchText);\r\n        if (newSearchText){\r\n            //call to TMDB\r\n            const searchURL = \"https://api.themoviedb.org/3/search/person?api_key=d5fc0ebcdc97957658216ba08b5e9436&query=\"+newSearchText;\r\n            axios.get(searchURL).then(response =>{\r\n                setResults(response.data.results);\r\n            });\r\n        } else {\r\n            setResults([]);\r\n        }\r\n    }\r\n\r\n    function addActor(resultIndex){\r\n        if (actors && !actors.some(el => parseInt(el.id) === parseInt(results[resultIndex].id))){\r\n            const imgURL = results[resultIndex].profile_path? \"https://image.tmdb.org/t/p/w500/\" + results[resultIndex].profile_path:\"\";    \r\n            const fullName =  results[resultIndex].name.trim();\r\n            let fname =\"\"; let lname =\"\";\r\n            if (fullName) {\r\n                const nameArr = fullName.split(' ');\r\n                if (nameArr.length > 2) {\r\n                    fname = nameArr[0];\r\n                    lname = nameArr.slice(1).join(' ')          \r\n                } else {\r\n                    fname = nameArr[0];\r\n                    lname = nameArr[nameArr.length - 1];\r\n                }\r\n            }\r\n            const searchIndexURL = `https://api.themoviedb.org/3/person/${results[resultIndex].id}?api_key=d5fc0ebcdc97957658216ba08b5e9436`;    \r\n            axios.get(searchIndexURL).then(response =>{\r\n                setActors(actors.concat(\r\n                    new ActorModel(fname, lname, response.data.birthday, response.data.deathday,\r\n                                imgURL, \"https://www.imdb.com/name/\"+response.data.imdb_id, \r\n                                response.data.id)));\r\n            });       \r\n        }\r\n        setResults([]);\r\n        setSearchText(\"\");\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className=\"p-title\">Actors</h1>\r\n            <SearchBox \r\n                placeHolder=\"Search Actor...\" \r\n                searchText={searchText} \r\n                onSearchChange={handleSearchChange}\r\n                results={results.map(result => result.name)}\r\n                onResultSelected={addActor}/>\r\n            <HeaderActorsPage onFilterChange={filterTextChange} onSortChange={sortByChange}/>\r\n            <Actors filterBy={filterText} sortBy={sortBy} actors={actors}/>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Card, Container, ListGroup } from 'react-bootstrap'\r\nimport './MovieCard.css'\r\n\r\nexport default function MovieCard({movie}) {\r\n    return (           \r\n        <Container className=\"c-movie-card mb-3\">\r\n            <Card className=\"c-movie-card-item row g-0\">\r\n                <img src={movie.posterPath} alt=\"\" className=\"col-md-4\"/>\r\n                <Card.Body className=\"col-md-8 c-movie-card-body\">\r\n                    <Card.Title className=\"text-center\">\r\n                        {movie.title}\r\n                    </Card.Title>\r\n                    <Card.Text className=\"c-movie-card-text\">\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>Durarion (minutes): {movie.runtime}</ListGroup.Item>\r\n                            <ListGroup.Item>Director: {movie.director}</ListGroup.Item>\r\n                            <ListGroup.Item>Stars: {movie.stars}</ListGroup.Item>\r\n                            <ListGroup.Item>Plot: {movie.plot}</ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        </Container>     \r\n    )\r\n}\r\n","import React from 'react'\r\nimport MovieCard from '../../components/MovieCard/MovieCard';\r\n\r\nexport default function Movies({movies}) {\r\n    let moviesCards;\r\n    if(movies){\r\n        moviesCards = movies.map((movie,index)=><MovieCard key={index} movie={movie}></MovieCard>);\r\n    }\r\n    return (\r\n        <div>\r\n            {moviesCards}\r\n        </div>\r\n    )\r\n}\r\n","class MovieModel{\r\n    constructor(id, title, posterPath, plot){        \r\n            this.id = id;\r\n            this.title = title;\r\n            this.posterPath = posterPath;\r\n            this.plot= plot;    \r\n    } \r\n    setStars(actors){\r\n        this.stars = actors;\r\n    }\r\n    setDirector(director){\r\n        this.director= director;\r\n    }\r\n    setRuntime(runtime){\r\n        this.runtime = runtime;\r\n    }\r\n}\r\nexport default MovieModel;","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Container, Spinner } from 'react-bootstrap';\r\nimport { useParams } from 'react-router';\r\nimport Movies from '../../components/Movies/Movies';\r\nimport SearchBox from '../../components/SearchBox/SearchBox';\r\nimport MovieModel from '../../model/MovieModel';\r\nimport './MoviesPage.css';\r\n\r\n function MoviesPage() {\r\n    const {actorId} = useParams();\r\n    const [movies, setMovies] = useState([]);\r\n    const [results, setResults] = useState([]);\r\n    const [searchText, setSearchText] = useState(\"\")\r\n\r\n\r\n    let movieList=[];\r\n    //if it comes from actors page by selecting an actor then the list will be the specific actor movies\r\n    //else it will show top ten all time movies\r\n    useEffect(() => {\r\n        if(actorId){\r\n            const searchURL= `https://api.themoviedb.org/3/person/${actorId}/movie_credits?api_key=d5fc0ebcdc97957658216ba08b5e9436`;\r\n            axios.get(searchURL).then(res => {\r\n                res.data.cast.slice(0,20).map(plainMovie => {\r\n                    const movie = new MovieModel(plainMovie.id, plainMovie.title, \"https://image.tmdb.org/t/p/w500\"+plainMovie.poster_path,plainMovie.overview);\r\n                    //get info regarding each movie\r\n                    additionalInfo(movie, actorId);        \r\n                }); \r\n            });                 \r\n        }\r\n    }, [actorId]);\r\n\r\n    function additionalInfo(movie, actorId){\r\n        const promise1 = axios.get(`https://api.themoviedb.org/3/movie/${movie.id}/credits?api_key=d5fc0ebcdc97957658216ba08b5e9436`);\r\n        const promise2 = axios.get(`https://api.themoviedb.org/3/movie/${movie.id}?api_key=d5fc0ebcdc97957658216ba08b5e9436`);\r\n        Promise.all([promise1,promise2]).then(responses=>{\r\n            movie.setStars(responses[0].data.cast.slice(0,9).map(x=> x.name).join(\", \"));\r\n            movie.setDirector(responses[0].data.crew.find(x=>x.job==='Director').name);\r\n            movie.setRuntime(responses[1].data.runtime);\r\n            if(actorId){\r\n                movieList = movieList.concat(movie);  \r\n            } else{\r\n                movieList = movies.concat(movie);  \r\n            }\r\n            setMovies(movieList);\r\n        });         \r\n    }\r\n\r\n    function handleSearchChange(newSearchText){\r\n        setSearchText(newSearchText);\r\n        if (newSearchText){\r\n            //call to TMDB\r\n            const searchURL = \"https://api.themoviedb.org/3/search/movie?api_key=d5fc0ebcdc97957658216ba08b5e9436&query=\"+newSearchText;\r\n            axios.get(searchURL).then(response =>{\r\n                setResults(response.data.results);\r\n            });\r\n        } else {\r\n            setResults([]);\r\n        }\r\n    }\r\n\r\n    function addMovie(resultIndex){\r\n        if (movies && !movies.some(el => parseInt(el.id) === parseInt(results[resultIndex].id))){\r\n            const movie =  new MovieModel(results[resultIndex].id,\r\n                results[resultIndex].title, \r\n                \"https://image.tmdb.org/t/p/w500\"+results[resultIndex].poster_path,\r\n                results[resultIndex].overview);    \r\n            additionalInfo(movie, null);    \r\n        }\r\n        setResults([]);\r\n        setSearchText(\"\");\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className=\"p-title\">Movies</h1>\r\n            <SearchBox \r\n                placeHolder=\"Search Movie...\" \r\n                searchText={searchText} \r\n                onSearchChange={handleSearchChange}\r\n                results={results.map(result => result.title)}\r\n                onResultSelected={addMovie}/>\r\n                <div className=\"p-movie-results\">\r\n                    {movies.length>0 ? \r\n                    <Movies movies={movies}/> :\r\n                    <Spinner className=\"p-movie-spinner\"/>}\r\n                </div>\r\n        </Container>\r\n    )\r\n}\r\nexport default MoviesPage;","import React from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport './NotFoundPage.css'\r\n\r\nexport default function NotFoundPage() {\r\n    return (\r\n        <Container className=\"p-not-found\">\r\n            <img src=\"https://miro.medium.com/max/800/1*hFwwQAW45673VGKrMPE2qQ.png\" alt=\"\"></img>\r\n        </Container>\r\n    )\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport NavbarAppComponent from \"./components/NavbarAppComponent/NavbarAppComponent\";\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport ActorsPage from \"./pages/ActorsPage/ActorsPage\";\nimport MoviesPage from \"./pages/MoviesPage/MoviesPage\";\nimport NotFoundPage from './pages/NotFoundPage/NotFoundPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">     \n      <HashRouter>\n        <NavbarAppComponent/>\n        <Switch>\n          <Route exact path=\"/actors\"><ActorsPage/></Route>\n          <Route exact path=\"/movies\"><MoviesPage/></Route>\n          <Route exact path=\"/actor/:actorId/movies\"><MoviesPage/></Route>\n          <Route exact path=\"/home\"><HomePage/></Route>\n          <Route exact path=\"/\"><HomePage/></Route>\n          <Route path=\"/\"><NotFoundPage/></Route>\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}