{"version":3,"sources":["components/HeaderActorPage/HeaderActorPage.js","components/ActorCard/ActorCard.js","components/Actors/Actors.js","components/SearchBox/SearchBox.js","model/ActorModel.js","pages/ActorPage/ActorPage.js","App.js","reportWebVitals.js","index.js"],"names":["HeaderActorPage","onFilterChange","onSortChange","Form","className","Row","Col","Label","Control","type","onChange","e","target","value","as","ActorCard","actor","Card","Img","variant","src","img","Body","Title","href","imdb","fname","lname","Text","age","Actors","actorsCards","filterBy","sortBy","actors","filter","toLowerCase","includes","sort","a","b","toUpperCase","localeCompare","map","index","SearchBox","placeHolder","searchText","onSearchChange","results","onResultSelected","placeholder","ListGroup","result","Item","action","onClick","ActorModel","plainActor","bday","id","this","getAge","dateString","today","Date","birthDate","getFullYear","m","getMonth","getDate","ActorPage","useState","filterText","setFilterText","setSortBy","setSearchText","setResults","setActors","useEffect","axios","get","process","concat","then","res","newActors","data","Container","newSearchText","searchURL","response","name","resultIndex","some","el","imgURL","profile_path","fullName","trim","nameArr","split","length","slice","join","searchIndexURL","birthday","imdb_id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e2f53ca.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Col, Form } from 'react-bootstrap';\r\nimport './HeaderActorPage.css';\r\n\r\nexport default function HeaderActorPage({onFilterChange, onSortChange}) {\r\n    return (\r\n        <Form className=\"p-actor-header\">\r\n            <Form.Row>\r\n                <Col className=\"col-md-6 col-12\">               \r\n                    <Form.Label>Filter by:</Form.Label>  \r\n                    <Form.Control type=\"text\" onChange={(e)=>onFilterChange(e.target.value)}/>\r\n                </Col>\r\n                <Col className=\"col-md-6 col-12\">\r\n                    <Form.Label>Sort by:</Form.Label>\r\n                    <Form.Control as=\"select\" onChange={(e)=>onSortChange(e.target.value)}>\r\n                        <option value=\"fname\">First Name</option>\r\n                        <option value=\"lname\">Last Name</option>\r\n                        <option value=\"aged\">Age &darr;</option>\r\n                        <option value=\"agea\">Age &uarr;</option>\r\n                    </Form.Control>\r\n                </Col>\r\n            </Form.Row>                \r\n        </Form>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport './ActorCard.css';\r\n\r\nexport default function ActorCard({actor}) {\r\n    return (\r\n            <Card className=\"col-sm-6 col-md-3 c-actor-card\">\r\n                <Card.Img variant=\"top\" src={actor.img}/>\r\n                <Card.Body>\r\n                    <Card.Title>\r\n                        <a href={actor.imdb} target=\"_blank\">\r\n                            {`${actor.fname} ${actor.lname}`}\r\n                        </a>\r\n                    </Card.Title>\r\n                    <Card.Text>\r\n                        {actor.age}\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ActorCard from '../ActorCard/ActorCard';\r\nimport './Actors.css'\r\nexport default function Actors({filterBy, sortBy, actors}) {\r\n    let actorsCards;\r\n\r\n    if(actors){\r\n        if(filterBy){\r\n            actors = actors.filter(actor=> actor.fname.toLowerCase().includes(filterBy.toLowerCase()) || \r\n                                            actor.lname.toLowerCase().includes(filterBy.toLowerCase()));               \r\n        }\r\n        if(sortBy){\r\n            actors.sort(function(a,b){\r\n                switch (sortBy){\r\n                    case \"fname\":\r\n                    case \"lname\":\r\n                        return a[sortBy].toUpperCase().localeCompare(b[sortBy].toUpperCase());\r\n                    case \"aged\":\r\n                        return b.age-a.age;\r\n                    case \"agea\":\r\n                        return a.age-b.age;\r\n\r\n                }\r\n            })\r\n        }\r\n        if(actors)\r\n            actorsCards = actors.map((actor, index) =><ActorCard key={index} actor={actor}/>);\r\n    }\r\n    return (\r\n            <div className=\"actors-cards\">\r\n                {actorsCards}\r\n            </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Form, ListGroup } from 'react-bootstrap'\r\nimport './SearchBox.css'\r\nexport default function SearchBox({placeHolder, searchText, onSearchChange, results, onResultSelected}) {\r\n    return (\r\n        <div className=\"c-search-box\">\r\n            <Form.Control type=\"text\" placeholder={placeHolder} \r\n                value= {searchText}\r\n                onChange={e => onSearchChange(e.target.value)}/>\r\n            <ListGroup className=\"c-result-box\">\r\n                {results.map((result,index) => \r\n                <ListGroup.Item action onClick= {()=>onResultSelected(index)}>\r\n                    {result}\r\n                </ListGroup.Item>)}\r\n            </ListGroup>\r\n        </div>\r\n    )\r\n}\r\n","\r\nclass ActorModel{\r\n    constructor(plainActor, lname, bday, img, imdb, id){\r\n        if(typeof plainActor==='object'){\r\n            this.fname = plainActor.fname;\r\n            this.lname = plainActor.lname;\r\n            this.bday = plainActor.bday;\r\n            this.img = plainActor.img;\r\n            this.imdb = plainActor.imdb;\r\n            this.id = plainActor.id;\r\n        } else{\r\n            this.fname = plainActor;\r\n            this.lname = lname;\r\n            this.bday = bday;\r\n            this.img = img;\r\n            this.imdb = imdb;\r\n            this.id= id;\r\n        }\r\n        this.age = this.getAge(this.bday);\r\n    }\r\n\r\n    getAge(dateString) {\r\n        const today = new Date();\r\n        const birthDate = new Date(dateString);\r\n        let age = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age--;\r\n        }\r\n        return age;\r\n    }\r\n}\r\nexport default ActorModel","import React , { useState, useEffect } from 'react'\r\nimport HeaderActorPage from '../../components/HeaderActorPage/HeaderActorPage'\r\nimport { Container } from 'react-bootstrap'\r\nimport Actors from '../../components/Actors/Actors';\r\nimport SearchBox from '../../components/SearchBox/SearchBox';\r\nimport './ActorPage.css'\r\nimport axios from 'axios';\r\nimport ActorModel from '../../model/ActorModel';\r\n\r\nexport default function ActorPage() {\r\n    const [filterText, setFilterText] = useState(\"\");\r\n    const [sortBy, setSortBy] = useState(\"fname\");\r\n    const [searchText, setSearchText] = useState(\"\")\r\n    const [results, setResults] = useState([]);\r\n    const [actors, setActors] = useState([]);\r\n\r\n    const pathPre = process.env.PUBLIC_URL;\r\n\r\n    useEffect(()=>{\r\n        axios.get(pathPre.concat(\"/actors.json\")).then(res=>{\r\n            const newActors = res.data.map(plainActor => new ActorModel(plainActor));\r\n            setActors(newActors);\r\n        });\r\n      }, []);\r\n\r\n    function filterTextChange(data){\r\n        setFilterText(data);\r\n    }\r\n\r\n    function sortByChange(data){\r\n        setSortBy(data);\r\n    }\r\n\r\n    function handleSearchChange(newSearchText){\r\n        setSearchText(newSearchText);\r\n        if (newSearchText){\r\n            //call to TMDB\r\n            const searchURL = \"https://api.themoviedb.org/3/search/person?api_key=d5fc0ebcdc97957658216ba08b5e9436&query=\"+newSearchText;\r\n            axios.get(searchURL).then(response =>{\r\n                setResults(response.data.results);\r\n            });\r\n        } else {\r\n            setResults([]);\r\n        }\r\n    }\r\n\r\n    function addActor(resultIndex){\r\n        if (actors && !actors.some(el => el.id == results[resultIndex].id)){\r\n            const imgURL = \"https://image.tmdb.org/t/p/w500/\" + results[resultIndex].profile_path;\r\n            const fullName =  results[resultIndex].name.trim();\r\n            let fname =\"\"; let lname =\"\";\r\n            if (fullName) {\r\n                const nameArr = fullName.split(' ');\r\n                if (nameArr.length > 2) {\r\n                    fname = nameArr[0];\r\n                    lname = nameArr.slice(1).join(' ')          \r\n                } else {\r\n                    fname = nameArr[0];\r\n                    lname = nameArr[nameArr.length - 1];\r\n                }\r\n            }\r\n            const searchIndexURL = `https://api.themoviedb.org/3/person/${results[resultIndex].id}?api_key=d5fc0ebcdc97957658216ba08b5e9436`;\r\n            let bDay=\"\"; let imdbID=\"\";\r\n    \r\n            axios.get(searchIndexURL).then(response =>{\r\n                bDay = response.data.birthday;\r\n                imdbID = response.data.imdb_id;\r\n                const imdbPath = \"https://www.imdb.com/name/\"+imdbID;\r\n                setActors(actors.concat(\r\n                    new ActorModel(fname, lname, response.data.birthday, \r\n                                imgURL, \"https://www.imdb.com/name/\"+response.data.imdb_id, \r\n                                response.data.id)));\r\n            });       \r\n        }\r\n        setResults([]);\r\n        setSearchText(\"\");\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <SearchBox \r\n                placeHolder=\"Search Actor...\" \r\n                searchText={searchText} \r\n                onSearchChange={handleSearchChange}\r\n                results={results.map(result => result.name)}\r\n                onResultSelected={addActor}/>\r\n            <HeaderActorPage onFilterChange={filterTextChange} onSortChange={sortByChange}/>\r\n            <Actors filterBy={filterText} sortBy={sortBy} actors={actors}/>\r\n        </Container>\r\n    )\r\n}\r\n","import ActorPage from \"./pages/ActorPage/ActorPage\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ActorPage/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}