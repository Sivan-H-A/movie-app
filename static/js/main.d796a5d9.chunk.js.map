{"version":3,"sources":["components/NavbarAppComponent/NavbarAppComponent.js","pages/HomePage/HomePage.js","components/HeaderActorsPage/HeaderActorsPage.js","components/ActorCard/ActorCard.js","components/Actors/Actors.js","components/SearchBox/SearchBox.js","model/ActorModel.js","pages/ActorsPage/ActorsPage.js","components/MovieCard/MovieCard.js","model/MovieModel.js","pages/MoviesPage/MoviesPage.js","pages/NotFoundPage/NotFoundPage.js","App.js","reportWebVitals.js","index.js"],"names":["NavbarAppComponent","Container","className","Navbar","bg","variant","Brand","src","alt","Nav","Link","href","HomePage","Image","fluid","HeaderActorsPage","onFilterChange","onSortChange","Form","Row","Col","Label","Control","type","onChange","e","target","value","as","ActorCard","actor","useState","redirectTo","setRedirectTo","undefined","to","Card","onClick","id","Img","img","Body","Title","imdb","rel","fname","lname","Text","deathDay","age","Actors","actorsCards","filterBy","sortBy","actors","filter","toLowerCase","includes","sort","a","b","toUpperCase","localeCompare","map","index","SearchBox","placeHolder","searchText","onSearchChange","results","onResultSelected","placeholder","ListGroup","result","Item","action","ActorModel","plainActor","birthday","this","getAge","dateString","deadString","today","Date","birthDate","getFullYear","m","getMonth","getDate","ActorsPage","filterText","setFilterText","setSortBy","setSearchText","setResults","setActors","useEffect","axios","get","process","concat","then","res","newActors","data","newSearchText","searchURL","response","name","resultIndex","some","el","parseInt","imgURL","profile_path","fullName","trim","nameArr","split","length","slice","join","searchIndexURL","deathday","imdb_id","MovieCard","movie","posterPath","title","runtime","director","stars","plot","MovieModel","MoviesPage","actorId","useParams","movies","setMovies","movieList","addMovie","plainMovie","poster_path","overview","promise1","promise2","Promise","all","responses","setStars","cast","x","setDirector","crew","find","job","setRuntime","Spinner","NotFoundPage","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d796a5d9.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Container, Nav, Navbar} from 'react-bootstrap'\r\nimport './NavbarAppComponent.css'\r\nexport default function NavbarAppComponent() {\r\n    return (\r\n        <Container className=\"c-navbar\">\r\n            <Navbar bg=\"white\" variant=\"light\">\r\n                <Navbar.Brand className=\"c-navbar-brand\">\r\n                    <img src=\"https://cdn2.iconfinder.com/data/icons/bold-outline-v1/512/camera_cine_cinema_film-512.png\" alt=\"\"></img>\r\n                    Movie App\r\n                </Navbar.Brand>\r\n                <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                <Nav.Link href=\"#actors\">Actors</Nav.Link>\r\n                <Nav.Link href=\"#movies\">Movies</Nav.Link>\r\n                </Nav>\r\n            </Navbar>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Container , Image } from 'react-bootstrap';\r\nimport './HomePage.css';\r\n\r\nexport default function HomePage() {\r\n    return (\r\n        <Container className=\"p-home\" >\r\n            <h1>Best movie app ever!</h1>\r\n            <Image src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/33/Film_Barnstar_Hires_Gold.svg/2000px-Film_Barnstar_Hires_Gold.svg.png\" fluid />\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Col, Form } from 'react-bootstrap';\r\nimport './HeaderActorsPage.css';\r\n\r\nexport default function HeaderActorsPage({onFilterChange, onSortChange}) {\r\n    return (\r\n        <Form className=\"p-actor-header\">\r\n            <Form.Row>\r\n                <Col className=\"col-md-6 col-12\">               \r\n                    <Form.Label>Filter by:</Form.Label>  \r\n                    <Form.Control type=\"text\" onChange={(e)=>onFilterChange(e.target.value)}/>\r\n                </Col>\r\n                <Col className=\"col-md-6 col-12\">\r\n                    <Form.Label>Sort by:</Form.Label>\r\n                    <Form.Control as=\"select\" onChange={(e)=>onSortChange(e.target.value)}>\r\n                        <option value=\"fname\">First Name</option>\r\n                        <option value=\"lname\">Last Name</option>\r\n                        <option value=\"aged\">Age &darr;</option>\r\n                        <option value=\"agea\">Age &uarr;</option>\r\n                    </Form.Control>\r\n                </Col>\r\n            </Form.Row>                \r\n        </Form>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router';\r\nimport './ActorCard.css';\r\n\r\nexport default function ActorCard({actor}) {\r\n    const [redirectTo, setRedirectTo] = useState();\r\n\r\n    if(redirectTo!==undefined){\r\n        return <Redirect to={'/actor/'+redirectTo+'/movies'}/>\r\n    }\r\n\r\n    return (\r\n            <Card className=\"col-sm-6 col-md-3 c-actor-card\" onClick={()=>setRedirectTo(actor.id)}>\r\n                <Card.Img variant=\"top\" src={actor.img}/>\r\n                <Card.Body>\r\n                    <Card.Title>\r\n                        <a href={actor.imdb} target=\"_blank\" rel=\"noreferrer\">\r\n                            {`${actor.fname} ${actor.lname}`}\r\n                        </a>\r\n                    </Card.Title>\r\n                    <Card.Text className={actor.deathDay?\"text-alert\":\"\"}>\r\n                        {actor.age} {actor.deathDay?\" (deceased)\":\"\"}\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ActorCard from '../ActorCard/ActorCard';\r\nimport './Actors.css'\r\nexport default function Actors({filterBy, sortBy, actors}) {\r\n    let actorsCards;\r\n\r\n    if(actors){\r\n        if(filterBy){\r\n            actors = actors.filter(actor=> actor.fname.toLowerCase().includes(filterBy.toLowerCase()) || \r\n                                            actor.lname.toLowerCase().includes(filterBy.toLowerCase()));               \r\n        }\r\n        if(sortBy){\r\n            actors.sort(function(a,b){\r\n                switch (sortBy){\r\n                    case \"fname\":\r\n                    case \"lname\":\r\n                        return a[sortBy].toUpperCase().localeCompare(b[sortBy].toUpperCase());\r\n                    case \"aged\":\r\n                        return b.age-a.age;\r\n                    case \"agea\":\r\n                        return a.age-b.age;\r\n                    default: \r\n                        return -1;\r\n                }\r\n            })\r\n        }\r\n        if(actors)\r\n            actorsCards = actors.map((actor, index) =><ActorCard key={index} actor={actor}/>);\r\n    }\r\n    return (\r\n            <div className=\"actors-cards\">\r\n                {actorsCards}\r\n            </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Form, ListGroup } from 'react-bootstrap'\r\nimport './SearchBox.css' \r\n\r\nexport default function SearchBox({placeHolder, searchText, onSearchChange, results, onResultSelected}) {\r\n    return (\r\n        <div className=\"c-search-box\">\r\n            <Form.Control className=\"c-search-input\" type=\"text\" placeholder={placeHolder} \r\n                value= {searchText}\r\n                onChange={e => onSearchChange(e.target.value)}>   \r\n            </Form.Control>               \r\n            <ListGroup className=\"c-result-box\">\r\n                {results.map((result,index) => \r\n                <ListGroup.Item action onClick= {()=>onResultSelected(index)}>\r\n                    {result}\r\n                </ListGroup.Item>)}\r\n            </ListGroup>\r\n        </div>\r\n    )\r\n}\r\n","\r\nclass ActorModel{\r\n    constructor(plainActor, lname, birthday,deathDay, img, imdb, id){\r\n        if(typeof plainActor==='object'){\r\n            this.fname = plainActor.fname;\r\n            this.lname = plainActor.lname;\r\n            this.birthday = plainActor.birthday;\r\n            this.deathDay = plainActor.deathDay;\r\n            this.img = plainActor.img;\r\n            this.imdb = plainActor.imdb;\r\n            this.id = plainActor.id;\r\n        } else{\r\n            this.fname = plainActor;\r\n            this.lname = lname;\r\n            this.birthday = birthday;\r\n            this.deathDay = deathDay;\r\n            this.img = img;\r\n            this.imdb = imdb;\r\n            this.id= id;\r\n        }\r\n        this.age = this.getAge(this.birthday, this.deathDay);\r\n    }\r\n\r\n    getAge(dateString, deadString) {\r\n        const today = deadString ?  new Date(deadString): new Date();\r\n        const birthDate = new Date(dateString);\r\n        let age = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age--;\r\n        }\r\n        return age;\r\n    }\r\n}\r\nexport default ActorModel","import React , { useState, useEffect } from 'react'\r\nimport HeaderActorsPage from '../../components/HeaderActorsPage/HeaderActorsPage'\r\nimport { Container } from 'react-bootstrap'\r\nimport Actors from '../../components/Actors/Actors';\r\nimport SearchBox from '../../components/SearchBox/SearchBox';\r\nimport './ActorsPage.css'\r\nimport axios from 'axios';\r\nimport ActorModel from '../../model/ActorModel';\r\n\r\nexport default function ActorsPage() {\r\n    const [filterText, setFilterText] = useState(\"\");\r\n    const [sortBy, setSortBy] = useState(\"fname\");\r\n    const [searchText, setSearchText] = useState(\"\")\r\n    const [results, setResults] = useState([]);\r\n    const [actors, setActors] = useState([]);\r\n\r\n    const pathPre = process.env.PUBLIC_URL;\r\n\r\n    useEffect(()=>{\r\n        axios.get(pathPre.concat(\"/actors.json\")).then(res=>{\r\n            const newActors = res.data.map(plainActor => new ActorModel(plainActor));\r\n            setActors(newActors);\r\n        });\r\n      }, []);\r\n\r\n    function filterTextChange(data){\r\n        setFilterText(data);\r\n    }\r\n\r\n    function sortByChange(data){\r\n        setSortBy(data);\r\n    }\r\n\r\n    function handleSearchChange(newSearchText){\r\n        setSearchText(newSearchText);\r\n        if (newSearchText){\r\n            //call to TMDB\r\n            const searchURL = \"https://api.themoviedb.org/3/search/person?api_key=d5fc0ebcdc97957658216ba08b5e9436&query=\"+newSearchText;\r\n            axios.get(searchURL).then(response =>{\r\n                setResults(response.data.results);\r\n            });\r\n        } else {\r\n            setResults([]);\r\n        }\r\n    }\r\n\r\n    function addActor(resultIndex){\r\n        if (actors && !actors.some(el => parseInt(el.id) === parseInt(results[resultIndex].id))){\r\n            const imgURL = results[resultIndex].profile_path? \"https://image.tmdb.org/t/p/w500/\" + results[resultIndex].profile_path:\"\";    \r\n            const fullName =  results[resultIndex].name.trim();\r\n            let fname =\"\"; let lname =\"\";\r\n            if (fullName) {\r\n                const nameArr = fullName.split(' ');\r\n                if (nameArr.length > 2) {\r\n                    fname = nameArr[0];\r\n                    lname = nameArr.slice(1).join(' ')          \r\n                } else {\r\n                    fname = nameArr[0];\r\n                    lname = nameArr[nameArr.length - 1];\r\n                }\r\n            }\r\n            const searchIndexURL = `https://api.themoviedb.org/3/person/${results[resultIndex].id}?api_key=d5fc0ebcdc97957658216ba08b5e9436`;    \r\n            axios.get(searchIndexURL).then(response =>{\r\n                setActors(actors.concat(\r\n                    new ActorModel(fname, lname, response.data.birthday, response.data.deathday,\r\n                                imgURL, \"https://www.imdb.com/name/\"+response.data.imdb_id, \r\n                                response.data.id)));\r\n            });       \r\n        }\r\n        setResults([]);\r\n        setSearchText(\"\");\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className=\"p-title\">Actors</h1>\r\n            <SearchBox \r\n                placeHolder=\"Search Actor...\" \r\n                searchText={searchText} \r\n                onSearchChange={handleSearchChange}\r\n                results={results.map(result => result.name)}\r\n                onResultSelected={addActor}/>\r\n            <HeaderActorsPage onFilterChange={filterTextChange} onSortChange={sortByChange}/>\r\n            <Actors filterBy={filterText} sortBy={sortBy} actors={actors}/>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Container, Jumbotron } from 'react-bootstrap'\r\nimport './MovieCard.css'\r\nexport default function MovieCard({movie}) {\r\n    return (           \r\n        <Container className=\"c-movie-card row\">\r\n            <img src={movie.posterPath} alt=\"\" className=\"col-md-4\"></img>\r\n            <div className=\"col-md-8\">\r\n                <h3>{movie.title}</h3>\r\n                <h6>Durarion: {movie.runtime}</h6>\r\n                <h6>Director: {movie.director}</h6>\r\n                <h6>Stars: {movie.stars}</h6>\r\n                <h6>Plot: {movie.plot}</h6>\r\n            </div>\r\n        </Container>     \r\n    )\r\n}\r\n","class MovieModel{\r\n    constructor(id, title, posterPath, plot){        \r\n            this.id = id;\r\n            this.title = title;\r\n            this.posterPath = posterPath;\r\n            this.plot= plot;    \r\n    } \r\n    setStars(actors){\r\n        this.stars = actors;\r\n    }\r\n    setDirector(director){\r\n        this.director= director;\r\n    }\r\n    setRuntime(runtime){\r\n        this.runtime = runtime;\r\n    }\r\n}\r\nexport default MovieModel;","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Container, Spinner } from 'react-bootstrap';\r\nimport { useParams } from 'react-router';\r\nimport MovieCard from '../../components/MovieCard/MovieCard';\r\nimport MovieModel from '../../model/MovieModel';\r\nimport './MoviesPage.css';\r\n\r\n function MoviesPage() {\r\n    const {actorId} = useParams();\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    let movieList=[];\r\n    //if it comes from actors page by selecting an actor then the list will be the specific actor movies\r\n    //else it will show top ten all time movies\r\n    useEffect(() => {\r\n\r\n        const searchURL= actorId? `https://api.themoviedb.org/3/person/${actorId}/movie_credits?api_key=d5fc0ebcdc97957658216ba08b5e9436` :\r\n                        \"https://api.themoviedb.org/3/movie/top_rated?api_key=d5fc0ebcdc97957658216ba08b5e9436\";\r\n        \r\n        axios.get(searchURL).then(res => \r\n            actorId? res.data.cast.slice(0,19).map(plainMovie => addMovie(plainMovie)):\r\n            res.data.results.slice(0,19).map(plainMovie => addMovie(plainMovie))\r\n        );                  \r\n    }, [actorId]);\r\n\r\n    function addMovie(plainMovie){\r\n        const movie = new MovieModel(plainMovie.id, plainMovie.title, \"https://image.tmdb.org/t/p/w500\"+plainMovie.poster_path,plainMovie.overview);\r\n        //get info regarding each movie\r\n        const promise1 = axios.get(`https://api.themoviedb.org/3/movie/${movie.id}/credits?api_key=d5fc0ebcdc97957658216ba08b5e9436`);\r\n        const promise2 = axios.get(`https://api.themoviedb.org/3/movie/${movie.id}?api_key=d5fc0ebcdc97957658216ba08b5e9436`);\r\n        Promise.all([promise1,promise2]).then(responses=>{\r\n            movie.setStars(responses[0].data.cast.slice(0,9).map(x=> x.name).join(\", \"));\r\n            movie.setDirector(responses[0].data.crew.find(x=>x.job==='Director').name);\r\n            movie.setRuntime(responses[1].data.runtime);\r\n            movieList = movieList.concat(movie);  \r\n            setMovies(movieList);\r\n        });         \r\n\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className=\"text-center\">Top Rated Films</h1>\r\n            {movies ? movies.map((movie,index)=><MovieCard key={index} movie={movie}></MovieCard>) : <Spinner/>}\r\n        </Container>\r\n    )\r\n}\r\nexport default MoviesPage;","import React from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport './NotFoundPage.css'\r\n\r\nexport default function NotFoundPage() {\r\n    return (\r\n        <Container className=\"p-not-found\">\r\n            <img src=\"https://miro.medium.com/max/800/1*hFwwQAW45673VGKrMPE2qQ.png\"></img>\r\n        </Container>\r\n    )\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport NavbarAppComponent from \"./components/NavbarAppComponent/NavbarAppComponent\";\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport ActorsPage from \"./pages/ActorsPage/ActorsPage\";\nimport MoviesPage from \"./pages/MoviesPage/MoviesPage\";\nimport NotFoundPage from './pages/NotFoundPage/NotFoundPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavbarAppComponent/>\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/actors\">\n            <ActorsPage/>\n          </Route>\n          <Route exact path=\"/movies\">\n            <MoviesPage/>\n          </Route>\n          <Route exact path=\"/actor/:actorId/movies\">\n            <MoviesPage/>\n          </Route>\n          <Route exact path=\"/home\">\n            <HomePage/>\n          </Route>\n          <Route exact path=\"/\">\n            <HomePage/>\n          </Route>\n          <Route path=\"/\">\n            <NotFoundPage/>\n          </Route>\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}